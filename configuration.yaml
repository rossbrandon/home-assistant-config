
# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
# http:
#   base_url: example.duckdns.org:8123

# Text to speech
tts:
  - platform: google_translate

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml

# Theme
frontend:
  themes: !include_dir_merge_named themes
  
# Darksky Weather
weather:
  - platform: darksky
    api_key: !secret darksky_api_key
    mode: daily
  
# Nest
# Needs HACS to function: https://hacs.xyz/docs/installation/manual
# Badnest install: https://github.com/USA-RedDragon/badnest
badnest:
  issue_token: !secret nest_issue_token
  cookie: !secret nest_cookie
  region: us

# Nest Thermostat
climate:
  - platform: badnest
    scan_interval: 10

# August Lock
august:
  login_method: email
  username: !secret august_username
  password: !secret august_password

# Ring Doorbell
ring:
  username: !secret ring_username
  password: !secret ring_password
  
camera:
  - platform: ring
  
# Speedtest
speedtestdotnet:
  server_id: 5024
  scan_interval:
    minutes: 65
  monitored_conditions:
    - ping
    - download
    - upload
fastdotcom:
  scan_interval:
    minutes: 60

# Sensors
sensor:
  # System Monitor
  - platform: systemmonitor
    resources:
    - type: last_boot
    - type: disk_use_percent
      arg: /
    - type: memory_use_percent
    - type: swap_use_percent
    - type: load_1m
    - type: load_5m
    - type: load_15m
    
  # Command Line Sensors
  - platform: command_line
    name: CPU Temperature
    command: "cat /sys/class/thermal/thermal_zone0/temp"
    unit_of_measurement: "C"
    value_template: "{{ value | multiply(0.001) | round(1) }}"
    
  # Ring Doorbell
  - platform: ring
    monitored_conditions: [
        battery,
        wifi_signal_category, 
        wifi_signal_strength,
        last_activity
      ]
      
  # BadNest
  - platform: badnest
  
  # Template sensors
  - platform: template
    sensors:
      # Display relative time since last activity
      ring_front_door_last_activity_relative:
        friendly_name: "Front Door Last Activity"
        value_template: >
          {%- set entity_id = 'sensor.ring_front_door_last_activity' %}
          {%- set domain, object_id = entity_id.split('.') %}
          {%- set state_object = states[domain][object_id] %}
          {%- if state_object is defined and state_object.attributes.created_at is defined %}
            {%- set t = as_timestamp(state_object.attributes.created_at) %}
            {%- set n = now().timestamp() %}
            {%- set d = n-t %}
            {%- set midnight_today = as_timestamp(strptime(now().date() | string, "%Y-%m-%d")) %}
            {%- set midnight_yesterday = midnight_today - 86400 %}
            {%- set midnight_week_ago = midnight_today - 604800 %}
            {%- if d < 60 %}
              Less then a min ago
            {%- elif d < 3600 %}
              {{ (d // 60) | int }} min ago
            {%- elif d < n-midnight_today %}
              Today at {{ t | timestamp_custom('%I:%M %p') }}
            {%- elif d < n-midnight_yesterday %}
              Yesterday at {{ t | timestamp_custom('%I:%M %p') }}
            {%- elif d < n-midnight_week_ago %}
              {{ t | timestamp_custom('%A at %I:%M %p') }}
            {%- else %}
              {{ t | timestamp_custom('%m/%d at %I:%M %p') }}
            {%- endif %}
          {% else %}
            unknown
          {% endif %}
